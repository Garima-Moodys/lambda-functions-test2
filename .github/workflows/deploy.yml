name: Deploy SAM Application to AWS

# Trigger the workflow on push to main 
on:
  push:
    branches:
      - main  

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up AWS credentials
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  

    - name: Set up AWS SAM CLI
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true

    # Step 4: Determine Changed Python Functions and Build
    - name: Determine Changed Python Functions and Build
      run: |
        # Get the list of changed files between the current commit and the base branch (main)
        changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

        # Loop through each changed file and check if it's inside the src directory
        changed_functions=""
        for file in $changed_files; do
          if [[ "$file" == python/src/* ]]; then
            # Extract the function name from the path and add it to the list of changed functions
            function_name=$(basename "$file" | cut -d '.' -f 1)
            if [[ ! "${changed_functions} " =~ " ${function_name} " ]]; then
              changed_functions="${changed_functions} ${function_name}"
            fi
          fi
        done

        # Build only the changed functions if any
        if [ -n "$changed_functions" ]; then
          for function in $changed_functions; do
            echo "Building function: $function"
            cd python
            sam build $function --use-container
          done
        else
          echo "No changes detected in functions"
        fi

    # Step 5: Deploy the updated python functions
    - name: Deploy Updated Python Functions
      run: |
        cd python
        sam deploy

    # # Step 6: Build C# functions
    # - name: Build C# functions
    #   run: |
    #     cd c-sharp
    #     sam build --use-container --mount-with WRITE

    # # Step 7: Build Node.js functions
    # - name: Build Node.js functions
    #   run: |
    #     cd node-js
    #     sam build --use-container

    # # Step 8: Build Java functions
    # - name: Build Java function1
    #   run: |
    #     cd java
    #     sam build --use-container